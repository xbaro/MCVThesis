version: '3.7'

services:
  traefik:
    image: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/letsencrypt
    depends_on:
      - web
    networks:
      - front-end
    labels:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.tesla-tlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.tesla-tlschallenge.acme.email=xbaro@uoc.edu"
      - "--certificatesresolvers.tesla-tlschallenge.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.tesla-tlschallenge.acme.httpchallenge.entrypoint=http"
  web:
    build: .
    depends_on:
      - db
    networks:
      - front-end      
      - back-end
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DB_PASSWORD
      - DB_USER
      - DB_NAME
      - DB_HOST=db
      - DB_DIALECT=postgres
      - PORT=80
      - PORT_SSL=443
      - SMTP_USER
      - SMTP_PASSWORD
      - NUM_THREADS
      - LOGS_FOLDER=/log
      - SSL_PATH=/ssl
      - SSL_KEY
      - SSL_CRT
    volumes:
      - web_certs:/ssl
      - web_logs:/log
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`mcv.eimt.uoc.edu`)"
      - "traefik.http.routers.web.entrypoints=https"
      - "traefik.http.routers.web.tls.certresolver=tesla-tlschallenge"
      - "traefik.http.services.web-service.loadbalancer.server.port=80"
      - "traefik.http.routers.web.service=web-service"
  db2:
    image: postgres
    restart: always
    networks:
      - back-end
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:    
      - db_data:/var/lib/postgresql/data

    # MySQL
    db:
      image: mariadb
      restart: always
      ports:
        - 3306:3306
      networks:
        - back-end
      environment:
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_DATABASE: ${DB_USER}
        MYSQL_USER: ${DB_NAME}
        MYSQL_PASSWORD: ${DB_PASSWORD}
      volumes:
        - db_data:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
    networks:
      - front-end
      - back-end

  prometheus:
    image: "prom/prometheus"
    ports:
      - "9090"
    volumes:
      - prom_data:/prometheus-data

  grafana:
    image: "grafana/grafana"
    depends_on:
      - prometheus
    environment:
      GF_ROOT_URL: https://mcv.eimt.uoc.edu/grafana
      GF_SERVE_FROM_SUB_PATH: true
    ports:
      - "3000"
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`mcv.eimt.uoc.edu`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.web.entrypoints=https"
      - "traefik.http.routers.web.tls.certresolver=tesla-tlschallenge"
      - "traefik.http.services.web-service.loadbalancer.server.port=80"
      - "traefik.http.routers.web.service=web-service"

volumes:
  traefik_data:
    driver_opts:
      type: none
      device: $PWD/data/traefik
      o: bind
  db_data:
    driver_opts:
      type: none
      device: $PWD/data/db
      o: bind
  web_certs:
    driver_opts:
      type: none
      device: $PWD/data/certs
      o: bind
  web_logs:
    driver_opts:
      type: none
      device: $PWD/data/logs
      o: bind
  prom_data:
    driver_opts:
      type: none
      device: $PWD/data/prometheus
      o: bind
  grafana_data:
    driver_opts:
      type: none
      device: $PWD/data/grafana
      o: bind
networks:
  front-end:
    driver: bridge
  back-end:
    driver: bridge
